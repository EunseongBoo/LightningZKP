import "hashes/sha256/512bitPacked.zok" as sha256packed
import "ecc/proofOfOwnership.zok" as proofOfOwnership
import "ecc/babyjubjubParams.zok" as context
import "utils/pack/unpack128.zok" as unpack128
import "utils/pack/pack256.zok" as pack256

def main(field[2] oh, field[2] n0h, field[2] n1h, private field [4] spk, private field ssk, private field [4] rpk, private field oVal, private field oNonce, private field n0Val, private field n0Nonce, private field n1Val, private field n1Nonce) -> (field):
  oVal == n0Val + n1Val

  //check pk&sk
  context = context()
  a = unpack128(spk[0])
  b = unpack128(spk[1])
  c = unpack128(spk[2])
  d = unpack128(spk[3])
  proofOfOwnership([pack256([...a,...b]),pack256([...c,...d])],ssk,context) == 1

  h = sha256packed(spk)
  oh_ = sha256packed([h[0],h[1],oVal,oNonce])
  oh[0] == oh_[0]
  oh[1] == oh_[1]

  //for change note
  n1h_ = sha256packed([h[0],h[1],n1Val,n1Nonce])
  n1h[0] == n1h_[0]
  n1h[1] == n1h_[1]

  //for receiver's note
  h = sha256packed(rpk)
  n0h_ = sha256packed([h[0],h[1],n0Val,n0Nonce])
  n0h[0] == n0h_[0]
  n0h[1] == n0h_[1]

  return 1
