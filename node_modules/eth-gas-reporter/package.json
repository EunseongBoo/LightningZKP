{
  "_from": "eth-gas-reporter",
  "_id": "eth-gas-reporter@0.2.12",
  "_inBundle": false,
  "_integrity": "sha512-CKHisR92TyGv70r95eDc+mEythEzb57y0RCq9LWzDFpieR3Uat+FliPmJ6ni3cGp07IfU2gECb7AfXuYEoUWWQ==",
  "_location": "/eth-gas-reporter",
  "_phantomChildren": {
    "@types/node": "10.14.17",
    "aes-js": "3.0.0",
    "bn.js": "4.11.8",
    "brorand": "1.1.0",
    "inherits": "2.0.4",
    "minimalistic-assert": "1.0.1",
    "xmlhttprequest": "1.8.0"
  },
  "_requested": {
    "escapedName": "eth-gas-reporter",
    "fetchSpec": "latest",
    "name": "eth-gas-reporter",
    "raw": "eth-gas-reporter",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/eth-gas-reporter/-/eth-gas-reporter-0.2.12.tgz",
  "_shasum": "e89ab977eb43e5102a948b2cb1dc0e0a988f3a1a",
  "_spec": "eth-gas-reporter",
  "_where": "/home/boo/work/LightningZKP/contracts/verifiers",
  "author": {
    "email": "github.com/cgewecke",
    "name": "cgewecke"
  },
  "bugs": {
    "url": "https://github.com/cgewecke/eth-gas-reporter/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "abi-decoder": "^2.2.0",
    "cli-table3": "^0.5.0",
    "colors": "^1.1.2",
    "ethers": "^4.0.28",
    "fs-readdir-recursive": "^1.1.0",
    "lodash": "^4.17.14",
    "markdown-table": "^1.1.3",
    "mocha": "^5.2.0",
    "req-cwd": "^2.0.0",
    "request": "^2.88.0",
    "request-promise-native": "^1.0.5",
    "sha1": "^1.1.1",
    "solidity-parser-antlr": "0.4.7",
    "sync-request": "^6.0.0"
  },
  "deprecated": false,
  "description": "Mocha reporter which shows gas used per unit test.",
  "devDependencies": {
    "@codechecks/client": "^0.1.5",
    "@nomiclabs/buidler": "^1.0.0-beta.9",
    "@nomiclabs/buidler-truffle5": "^1.0.0-beta.9",
    "@nomiclabs/buidler-web3": "^1.0.0-beta.9",
    "fp-ts": "^1.19.0",
    "ganache-cli": "6.4.3",
    "geth-dev-assistant": "^0.0.3",
    "husky": "^2.3.0",
    "prettier": "1.17.1",
    "pretty-quick": "^1.11.0",
    "randomstring": "^1.1.5",
    "truffle": "5.0.12",
    "web3": "^1.2.0",
    "yarn": "^1.16.0"
  },
  "homepage": "https://github.com/cgewecke/eth-gas-reporter#readme",
  "husky": {
    "hooks": {
      "pre-commit": "pretty-quick --staged"
    }
  },
  "keywords": [
    "Ethereum",
    "gas.",
    "solidity",
    "truffle",
    "unit-testing"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "eth-gas-reporter",
  "optionalDependencies": {},
  "peerDependencies": {
    "@codechecks/client": "^0.1.0"
  },
  "readme": "# eth-gas-reporter\n\n[![npm version](https://badge.fury.io/js/eth-gas-reporter.svg)](https://badge.fury.io/js/eth-gas-reporter)\n[![Build Status](https://travis-ci.org/cgewecke/eth-gas-reporter.svg?branch=master)](https://travis-ci.org/cgewecke/eth-gas-reporter)\n[![Codechecks](https://raw.githubusercontent.com/codechecks/docs/master/images/badges/badge-default.svg?sanitize=true)](https://codechecks.io)\n[![buidler](https://buidler.dev/buidler-plugin-badge.svg?1)](https://github.com/cgewecke/buidler-gas-reporter)\n\n**A Mocha reporter for Ethereum test suites:**\n\n- Gas usage per unit test.\n- Metrics for method calls and deployments.\n- National currency costs of deploying and using your contract system.\n- CI integration with [codechecks](http://codechecks.io)\n- Simple installation for Truffle and Buidler\n\n### Example output\n\n![Screen Shot 2019-06-24 at 4 54 47 PM](https://user-images.githubusercontent.com/7332026/60059336-fa502180-96a0-11e9-92b8-3dd436a9b2f1.png)\n\n### Installation and Config\n\n**[Truffle](https://www.trufflesuite.com/docs)**\n\n```\nnpm install --save-dev eth-gas-reporter\n```\n\n```javascript\n/* truffle-config.js */\nmodule.exports = {\n  networks: { ... },\n  mocha: {\n    reporter: 'eth-gas-reporter',\n    reporterOptions : { ... } // See options below\n  }\n};\n```\n\n**[Buidler](https://buidler.dev)**\n\n```\nnpm install --save-dev buidler-gas-reporter\n```\n\n```javascript\n/* buidler.config.js */\nusePlugin('buidler-gas-reporter');\n\nmodule.exports = {\n  networks: { ... },\n  gasReporter: { ... } // See options below\n};\n```\n\n**Other**\n\nThis reporter should work with any build platform that uses Mocha and\nconnects to an Ethereum client running as a separate process. There's more on advanced use cases\n[here](https://github.com/cgewecke/eth-gas-reporter/blob/master/docs/advanced.md).\n\n### Continuous Integration (Travis and CircleCI)\n\nThis reporter comes with a [codechecks](http://codechecks.io) CI integration that\ndisplays a pull request's gas consumption changes relative to its target branch in the Github UI.\nIt's like coveralls for gas. The codechecks service is free for open source and maintained by MakerDao engineer [@krzkaczor](https://github.com/krzkaczor).\n\nComplete [set-up guide here](https://github.com/cgewecke/eth-gas-reporter/blob/master/docs/codechecks.md) (it's easy).\n\n![Screen Shot 2019-06-18 at 12 25 49 PM](https://user-images.githubusercontent.com/7332026/59713894-47298900-91c5-11e9-8083-233572787cfa.png)\n\n### Options\n\n| Option            | Type                   | Default                     | Description                                                                                                                                                                               |\n| ----------------- | ---------------------- | --------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| currency          | _String_               | 'EUR'                       | National currency to represent gas costs in. Exchange rates loaded at runtime from the `coinmarketcap` api. Available currency codes can be found [here](https://coinmarketcap.com/api/). |\n| gasPrice          | _Number_               | (varies)                    | Denominated in `gwei`. Default is loaded at runtime from the `eth gas station` api                                                                                                        |\n| outputFile        | _String_               | stdout                      | File path to write report output to                                                                                                                                                       |\n| noColors          | _Boolean_              | false                       | Suppress report color. Useful if you are printing to file b/c terminal colorization corrupts the text.                                                                                    |\n| onlyCalledMethods | _Boolean_              | true                        | Omit methods that are never called from report.                                                                                                                                           |\n| rst               | _Boolean_              | false                       | Output with a reStructured text code-block directive. Useful if you want to include report in RTD                                                                                         |\n| rstTitle          | _String_               | \"\"                          | Title for reStructured text header (See Travis for example output)                                                                                                                        |\n| showTimeSpent     | _Boolean_              | false                       | Show the amount of time spent as well as the gas consumed                                                                                                                                 |\n| excludeContracts  | _String[]_             | []                          | Contract names to exclude from report. Ex: `['Migrations']`                                                                                                                               |\n| src               | _String_               | \"contracts\"                 | Folder in root directory to begin search for `.sol` files. This can also be a path to a subfolder relative to the root, e.g. \"planets/annares/contracts\"                                  |\n| url               | _String_               | `web3.currentProvider.host` | RPC client url (ex: \"http://localhost:8545\")                                                                                                                                              |\n| proxyResolver     | _Function_             | none                        | Custom method to resolve identity of methods managed by a proxy contract.                                                                                                                 |\n| artifactType      | _Function_ or _String_ | \"truffle-v5\"                | Compilation artifact format to consume. (See [advanced use](https://github.com/cgewecke/eth-gas-reporter/blob/master/docs/advanced.md).)                                                  |\n\n### Advanced Use\n\nAn advanced use guide is available [here](https://github.com/cgewecke/eth-gas-reporter/blob/master/docs/advanced.md). Topics include:\n\n- Getting accurate gas data when using proxy contracts like EtherRouter or ZeppelinOS.\n- Configuring the reporter to work with non-truffle, non-buidler projects.\n\n### Example Reports\n\n- [gnosis/gnosis-contracts](https://github.com/cgewecke/eth-gas-reporter/blob/master/docs/gnosis.md)\n- [windingtree/LifToken](https://github.com/cgewecke/eth-gas-reporter/blob/master/docs/lifToken.md)\n\n### Usage Notes\n\n- Requires Node >= 8.\n- You cannot use `ganache-core` as an in-process provider for your test suite. The reporter makes sync RPC calls\n  while collecting data and your tests will hang unless the client is launched as a separate process.\n- Method calls that throw are filtered from the stats.\n- Contracts that are only ever created by other contracts within Solidity are not shown in the deployments table.\n\n### Contributions\n\nFeel free to open PRs or issues. There is an integration test and one of the mock test cases is expected to fail. If you're adding an option, you can vaildate it in CI by adding it to the mock options config located [here](https://github.com/cgewecke/eth-gas-reporter/blob/master/mock/config-template.js#L13-L19).\n\n### Credits\n\nAll the ideas in this utility have been borrowed from elsewhere. Many thanks to:\n\n- [@maurelian](https://github.com/maurelian) - Mocha reporting gas instead of time is his idea.\n- [@cag](https://github.com/cag) - The table borrows from / is based his gas statistics work for the Gnosis contracts.\n- [Neufund](https://github.com/Neufund/ico-contracts) - Block limit size ratios for contract deployments and euro pricing are borrowed from their `ico-contracts` test suite.\n\n### Contributors\n\n- [@cgewecke](https://github.com/cgewecke)\n- [@rmuslimov](https://github.com/rmuslimov)\n- [@area](https://github.com/area)\n- [@ldub](https://github.com/ldub)\n- [@ben-kaufman](https://github.com/ben-kaufman)\n- [@wighawag](https://github.com/wighawag)\n- [@ItsNickBarry](https://github.com/ItsNickBarry)\n- [@krzkaczor](https://github.com/krzkaczor)\n- [@ppoliani](https://github.com/@ppoliani)\n- [@gnidan](https://github.com/gnidan)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/cgewecke/eth-gas-reporter.git"
  },
  "scripts": {
    "ci": "./scripts/ci.sh",
    "geth": "./scripts/geth.sh",
    "test": "./mock/scripts/test.sh"
  },
  "version": "0.2.12"
}
